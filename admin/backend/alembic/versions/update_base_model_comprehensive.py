"""Update base model with comprehensive fields

Revision ID: update_base_model_comprehensive
Revises: fa3601714028
Create Date: 2025-09-15 02:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'update_base_model_comprehensive'
down_revision: Union[str, None] = 'fa3601714028'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('base_models', schema=None) as batch_op:
        # 添加新字段
        batch_op.add_column(sa.Column('display_name', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('model_type', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('template_path', sa.String(length=500), nullable=True))
        batch_op.add_column(sa.Column('is_available', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_default', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('sort_order', sa.Integer(), nullable=True))
        
        # 重命名字段
        batch_op.alter_column('unet_path', new_column_name='unet_file')
        batch_op.alter_column('clip_path', new_column_name='clip_file')
        batch_op.alter_column('vae_path', new_column_name='vae_file')
    
    # 设置默认值
    op.execute("UPDATE base_models SET display_name = name WHERE display_name IS NULL")
    op.execute("UPDATE base_models SET model_type = 'flux' WHERE model_type IS NULL")
    op.execute("UPDATE base_models SET is_available = 0 WHERE is_available IS NULL")
    op.execute("UPDATE base_models SET is_default = 0 WHERE is_default IS NULL")
    op.execute("UPDATE base_models SET sort_order = 0 WHERE sort_order IS NULL")
    
    # 设置非空约束
    with op.batch_alter_table('base_models', schema=None) as batch_op:
        batch_op.alter_column('display_name', nullable=False)
        batch_op.alter_column('model_type', nullable=False)
        batch_op.alter_column('is_available', nullable=False)
        batch_op.alter_column('is_default', nullable=False)
        batch_op.alter_column('sort_order', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('base_models', schema=None) as batch_op:
        # 删除新字段
        batch_op.drop_column('sort_order')
        batch_op.drop_column('is_default')
        batch_op.drop_column('is_available')
        batch_op.drop_column('template_path')
        batch_op.drop_column('model_type')
        batch_op.drop_column('display_name')
        
        # 恢复原字段名
        batch_op.alter_column('unet_file', new_column_name='unet_path')
        batch_op.alter_column('clip_file', new_column_name='clip_path')
        batch_op.alter_column('vae_file', new_column_name='vae_path')
    # ### end Alembic commands ###
